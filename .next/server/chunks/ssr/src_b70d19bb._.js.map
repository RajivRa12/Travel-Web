{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/pallarajiv/Downloads/Travel-App2%20%281%29%202/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":["file:///Users/pallarajiv/Downloads/Travel-App2%20%281%29%202/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 280, "column": 0}, "map": {"version":3,"sources":["file:///Users/pallarajiv/Downloads/Travel-App2%20%281%29%202/src/app/superadmin/dashboard/page.tsx"],"sourcesContent":["\"use client\";\n\nimport * as React from \"react\";\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  CardTitle,\n  CardDescription,\n} from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Badge } from \"@/components/ui/badge\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n  LineChart,\n  Line,\n  PieChart,\n  Pie,\n  Cell,\n} from \"recharts\";\nimport {\n  IndianRupee,\n  Users,\n  Package,\n  UserCheck,\n  Briefcase,\n  TrendingUp,\n  TrendingDown,\n  Calendar,\n  Filter,\n  Download,\n  Star,\n  Globe,\n  CreditCard,\n  UserX,\n  AlertTriangle,\n  CheckCircle,\n  Clock,\n} from \"lucide-react\";\n\n// Mock data for charts\nconst monthlyRevenueData = [\n  { month: \"Jan\", revenue: 450000, bookings: 65, mrr: 125000 },\n  { month: \"Feb\", revenue: 520000, bookings: 59, mrr: 135000 },\n  { month: \"Mar\", revenue: 680000, bookings: 80, mrr: 145000 },\n  { month: \"Apr\", revenue: 710000, bookings: 81, mrr: 155000 },\n  { month: \"May\", revenue: 620000, bookings: 56, mrr: 165000 },\n  { month: \"Jun\", revenue: 850000, bookings: 95, mrr: 175000 },\n];\n\nconst destinationRevenueData = [\n  { name: \"Thailand\", value: 2400000, bookings: 145, color: \"#0088FE\" },\n  { name: \"Indonesia\", value: 1800000, bookings: 89, color: \"#00C49F\" },\n  { name: \"Vietnam\", value: 1200000, bookings: 67, color: \"#FFBB28\" },\n  { name: \"Singapore\", value: 950000, bookings: 45, color: \"#FF8042\" },\n  { name: \"Malaysia\", value: 750000, bookings: 34, color: \"#8884d8\" },\n];\n\nconst npsData = [\n  { category: \"Promoters (9-10)\", count: 156, percentage: 78 },\n  { category: \"Passives (7-8)\", count: 32, percentage: 16 },\n  { category: \"Detractors (0-6)\", count: 12, percentage: 6 },\n];\n\n// Workflow data\nconst workflowSteps = [\n  {\n    id: 1,\n    title: \"KYC Approval\",\n    description: \"Review & approve new agent registrations\",\n    icon: UserCheck,\n    href: \"/superadmin/agents\",\n    pending: 3,\n    status: \"pending\",\n    color: \"text-orange-600\",\n    bgColor: \"bg-orange-50\",\n    borderColor: \"border-orange-200\",\n  },\n  {\n    id: 2,\n    title: \"Subscription Check\",\n    description: \"Verify agent subscription status\",\n    icon: CreditCard,\n    href: \"/superadmin/subscriptions\",\n    pending: 2,\n    status: \"pending\",\n    color: \"text-blue-600\",\n    bgColor: \"bg-blue-50\",\n    borderColor: \"border-blue-200\",\n  },\n  {\n    id: 3,\n    title: \"Package Approval\",\n    description: \"Review & approve travel packages\",\n    icon: Package,\n    href: \"/superadmin/packages\",\n    pending: 7,\n    status: \"pending\",\n    color: \"text-purple-600\",\n    bgColor: \"bg-purple-50\",\n    borderColor: \"border-purple-200\",\n  },\n  {\n    id: 4,\n    title: \"Monitor Bookings\",\n    description: \"Track booking operations & status\",\n    icon: Briefcase,\n    href: \"/superadmin/bookings\",\n    pending: 12,\n    status: \"active\",\n    color: \"text-green-600\",\n    bgColor: \"bg-green-50\",\n    borderColor: \"border-green-200\",\n  },\n  {\n    id: 5,\n    title: \"Payout Approval\",\n    description: \"Process agent payout requests\",\n    icon: IndianRupee,\n    href: \"/superadmin/payouts\",\n    pending: 2,\n    status: \"pending\",\n    color: \"text-red-600\",\n    bgColor: \"bg-red-50\",\n    borderColor: \"border-red-200\",\n  },\n  {\n    id: 6,\n    title: \"Analytics\",\n    description: \"View platform performance metrics\",\n    icon: TrendingUp,\n    href: \"/superadmin/dashboard\",\n    pending: 0,\n    status: \"completed\",\n    color: \"text-indigo-600\",\n    bgColor: \"bg-indigo-50\",\n    borderColor: \"border-indigo-200\",\n  },\n];\n\nexport default function SuperAdminDashboardPage() {\n  const [dateRange, setDateRange] = React.useState(\"30d\");\n  const [selectedDestination, setSelectedDestination] = React.useState(\"all\");\n  const [selectedMetric, setSelectedMetric] = React.useState(\"revenue\");\n\n  // Calculate NPS score: (% Promoters - % Detractors)\n  const npsScore = npsData[0].percentage - npsData[2].percentage;\n\n  const kpiCards = [\n    {\n      title: \"Daily Bookings\",\n      value: \"23\",\n      change: \"+12.5%\",\n      trend: \"up\",\n      icon: Briefcase,\n      description: \"Today vs Yesterday\",\n      color: \"text-blue-600\",\n      bgColor: \"bg-blue-50\",\n    },\n    {\n      title: \"Monthly Recurring Revenue (MRR)\",\n      value: \"₹1,75,000\",\n      change: \"+8.3%\",\n      trend: \"up\",\n      icon: CreditCard,\n      description: \"Subscription revenue\",\n      color: \"text-green-600\",\n      bgColor: \"bg-green-50\",\n    },\n    {\n      title: \"Active DMCs\",\n      value: \"234\",\n      change: \"+15\",\n      trend: \"up\",\n      icon: UserCheck,\n      description: \"Verified & Active\",\n      color: \"text-purple-600\",\n      bgColor: \"bg-purple-50\",\n    },\n    {\n      title: \"Traveler NPS Score\",\n      value: `${npsScore}`,\n      change: \"+5 points\",\n      trend: \"up\",\n      icon: Star,\n      description: \"Net Promoter Score\",\n      color: \"text-yellow-600\",\n      bgColor: \"bg-yellow-50\",\n    },\n    {\n      title: \"Total Revenue\",\n      value: \"₹45,23,189\",\n      change: \"+20.1%\",\n      trend: \"up\",\n      icon: IndianRupee,\n      description: \"This month\",\n      color: \"text-emerald-600\",\n      bgColor: \"bg-emerald-50\",\n    },\n    {\n      title: \"Pending Approvals\",\n      value: \"12\",\n      change: \"-3\",\n      trend: \"down\",\n      icon: Clock,\n      description: \"DMCs + Packages\",\n      color: \"text-orange-600\",\n      bgColor: \"bg-orange-50\",\n    },\n    {\n      title: \"Platform Health\",\n      value: \"99.2%\",\n      change: \"+0.1%\",\n      trend: \"up\",\n      icon: CheckCircle,\n      description: \"Uptime this month\",\n      color: \"text-green-600\",\n      bgColor: \"bg-green-50\",\n    },\n    {\n      title: \"Support Tickets\",\n      value: \"8\",\n      change: \"-4\",\n      trend: \"down\",\n      icon: AlertTriangle,\n      description: \"Open tickets\",\n      color: \"text-red-600\",\n      bgColor: \"bg-red-50\",\n    },\n  ];\n\n  const recentActivities = [\n    {\n      type: \"booking\",\n      message: \"New booking by Rahul Sharma for Thailand package\",\n      time: \"2 min ago\",\n      status: \"success\",\n    },\n    {\n      type: \"dmc\",\n      message: \"DMC 'Exotic Travel Co' submitted new package for approval\",\n      time: \"15 min ago\",\n      status: \"pending\",\n    },\n    {\n      type: \"payout\",\n      message: \"Payout of ₹45,000 processed to Paradise Tours\",\n      time: \"1 hour ago\",\n      status: \"success\",\n    },\n    {\n      type: \"alert\",\n      message: \"High bounce rate detected on Singapore packages\",\n      time: \"2 hours ago\",\n      status: \"warning\",\n    },\n    {\n      type: \"user\",\n      message: \"124 new user registrations today\",\n      time: \"3 hours ago\",\n      status: \"info\",\n    },\n  ];\n\n  const handleExportData = () => {\n    // Mock export functionality\n    alert(\"Exporting dashboard data as CSV...\");\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header with Filters */}\n      <div className=\"flex flex-col lg:flex-row lg:items-center lg:justify-between gap-4\">\n        <div>\n          <h1 className=\"text-3xl font-bold text-gray-900\">\n            Super Admin Dashboard\n          </h1>\n          <p className=\"text-gray-600\">\n            Comprehensive platform overview and analytics\n          </p>\n        </div>\n\n        <div className=\"flex flex-wrap items-center gap-3\">\n          <div className=\"flex items-center space-x-2\">\n            <Calendar className=\"h-4 w-4 text-gray-500\" />\n            <Select value={dateRange} onValueChange={setDateRange}>\n              <SelectTrigger className=\"w-40\">\n                <SelectValue />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"7d\">Last 7 days</SelectItem>\n                <SelectItem value=\"30d\">Last 30 days</SelectItem>\n                <SelectItem value=\"90d\">Last 90 days</SelectItem>\n                <SelectItem value=\"1y\">Last year</SelectItem>\n              </SelectContent>\n            </Select>\n          </div>\n\n          <div className=\"flex items-center space-x-2\">\n            <Globe className=\"h-4 w-4 text-gray-500\" />\n            <Select\n              value={selectedDestination}\n              onValueChange={setSelectedDestination}\n            >\n              <SelectTrigger className=\"w-40\">\n                <SelectValue />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"all\">All Destinations</SelectItem>\n                <SelectItem value=\"thailand\">Thailand</SelectItem>\n                <SelectItem value=\"indonesia\">Indonesia</SelectItem>\n                <SelectItem value=\"vietnam\">Vietnam</SelectItem>\n                <SelectItem value=\"singapore\">Singapore</SelectItem>\n              </SelectContent>\n            </Select>\n          </div>\n\n          <Button variant=\"outline\" onClick={handleExportData}>\n            <Download className=\"h-4 w-4 mr-2\" />\n            Export CSV\n          </Button>\n        </div>\n      </div>\n\n      {/* KPI Cards Grid */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n        {kpiCards.map((card, index) => {\n          const Icon = card.icon;\n          const TrendIcon = card.trend === \"up\" ? TrendingUp : TrendingDown;\n          const trendColor =\n            card.trend === \"up\" ? \"text-green-600\" : \"text-red-600\";\n\n          return (\n            <Card key={index} className=\"hover:shadow-md transition-shadow\">\n              <CardContent className=\"p-6\">\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex-1\">\n                    <p className=\"text-sm font-medium text-gray-600 mb-1\">\n                      {card.title}\n                    </p>\n                    <p className=\"text-2xl font-bold text-gray-900 mb-1\">\n                      {card.value}\n                    </p>\n                    <div className={`flex items-center text-sm ${trendColor}`}>\n                      <TrendIcon className=\"h-3 w-3 mr-1\" />\n                      <span className=\"font-medium\">{card.change}</span>\n                    </div>\n                    <p className=\"text-xs text-gray-500 mt-1\">\n                      {card.description}\n                    </p>\n                  </div>\n                  <div className={`${card.bgColor} p-3 rounded-full`}>\n                    <Icon className={`h-6 w-6 ${card.color}`} />\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          );\n        })}\n      </div>\n\n      {/* Admin Workflow Section */}\n      <div className=\"mt-8\">\n        <div className=\"mb-6\">\n          <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">\n            Admin Workflow\n          </h2>\n          <p className=\"text-gray-600\">\n            Follow the sequential workflow to manage the platform effectively\n          </p>\n        </div>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n          {workflowSteps.map((step, index) => {\n            const Icon = step.icon;\n            const isCompleted = step.status === \"completed\";\n            const isPending = step.status === \"pending\";\n            const hasNext = index < workflowSteps.length - 1;\n\n            return (\n              <div key={step.id} className=\"relative\">\n                <Card\n                  className={`hover:shadow-lg transition-all duration-200 cursor-pointer ${step.borderColor} border-2 ${isPending ? \"ring-2 ring-offset-2 ring-orange-500\" : \"\"}`}\n                >\n                  <CardContent className=\"p-6\">\n                    <div className=\"flex items-start justify-between mb-4\">\n                      <div className={`p-3 rounded-lg ${step.bgColor}`}>\n                        <Icon className={`h-6 w-6 ${step.color}`} />\n                      </div>\n                      <div className=\"flex items-center space-x-2\">\n                        <Badge variant=\"outline\" className=\"text-xs\">\n                          Step {step.id}\n                        </Badge>\n                        {step.pending > 0 && (\n                          <Badge variant=\"destructive\" className=\"text-xs\">\n                            {step.pending}\n                          </Badge>\n                        )}\n                      </div>\n                    </div>\n\n                    <h3 className=\"font-semibold text-lg text-gray-900 mb-2\">\n                      {step.title}\n                    </h3>\n                    <p className=\"text-gray-600 text-sm mb-4\">\n                      {step.description}\n                    </p>\n\n                    <div className=\"flex items-center justify-between\">\n                      <div className=\"flex items-center space-x-2\">\n                        {isCompleted && (\n                          <CheckCircle className=\"h-4 w-4 text-green-600\" />\n                        )}\n                        {isPending && (\n                          <Clock className=\"h-4 w-4 text-orange-600\" />\n                        )}\n                        <span\n                          className={`text-xs font-medium ${isCompleted ? \"text-green-600\" : isPending ? \"text-orange-600\" : \"text-blue-600\"}`}\n                        >\n                          {isCompleted\n                            ? \"Completed\"\n                            : isPending\n                              ? \"Needs Action\"\n                              : \"Active\"}\n                        </span>\n                      </div>\n\n                      <Button\n                        size=\"sm\"\n                        variant={isPending ? \"default\" : \"outline\"}\n                        onClick={() => (window.location.href = step.href)}\n                      >\n                        {isPending ? \"Review\" : \"View\"}\n                      </Button>\n                    </div>\n                  </CardContent>\n                </Card>\n\n                {/* Connection Arrow */}\n                {hasNext && (\n                  <div className=\"hidden lg:block absolute top-1/2 -right-2 transform -translate-y-1/2 z-10\">\n                    <div className=\"w-4 h-0.5 bg-gray-300\"></div>\n                    <div className=\"w-0 h-0 border-l-4 border-l-gray-300 border-t-2 border-b-2 border-t-transparent border-b-transparent absolute top-0 right-0 transform -translate-y-1/2\"></div>\n                  </div>\n                )}\n              </div>\n            );\n          })}\n        </div>\n\n        {/* Workflow Progress */}\n        <div className=\"mt-6 p-4 bg-gray-50 rounded-lg\">\n          <div className=\"flex items-center justify-between mb-2\">\n            <h4 className=\"font-medium text-gray-900\">\n              Overall Workflow Progress\n            </h4>\n            <span className=\"text-sm text-gray-600\">\n              {workflowSteps.filter((s) => s.status === \"completed\").length} of{\" \"}\n              {workflowSteps.length} completed\n            </span>\n          </div>\n          <div className=\"w-full bg-gray-200 rounded-full h-2\">\n            <div\n              className=\"bg-blue-600 h-2 rounded-full transition-all duration-300\"\n              style={{\n                width: `${(workflowSteps.filter((s) => s.status === \"completed\").length / workflowSteps.length) * 100}%`,\n              }}\n            ></div>\n          </div>\n        </div>\n      </div>\n\n      {/* Charts Grid */}\n      <div className=\"grid gap-6 md:grid-cols-2 lg:grid-cols-3\">\n        {/* Revenue Trend */}\n        <Card className=\"lg:col-span-2\">\n          <CardHeader>\n            <CardTitle>Revenue & Booking Trends</CardTitle>\n            <CardDescription>Monthly performance overview</CardDescription>\n          </CardHeader>\n          <CardContent>\n            <ResponsiveContainer width=\"100%\" height={300}>\n              <LineChart data={monthlyRevenueData}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"month\" />\n                <YAxis yAxisId=\"left\" orientation=\"left\" />\n                <YAxis yAxisId=\"right\" orientation=\"right\" />\n                <Tooltip\n                  formatter={(value, name) => [\n                    name === \"revenue\" ? `₹${value.toLocaleString()}` : value,\n                    name === \"revenue\"\n                      ? \"Revenue\"\n                      : name === \"bookings\"\n                        ? \"Bookings\"\n                        : \"MRR\",\n                  ]}\n                />\n                <Legend />\n                <Line\n                  yAxisId=\"left\"\n                  type=\"monotone\"\n                  dataKey=\"revenue\"\n                  stroke=\"#8884d8\"\n                  strokeWidth={2}\n                  name=\"revenue\"\n                />\n                <Line\n                  yAxisId=\"right\"\n                  type=\"monotone\"\n                  dataKey=\"bookings\"\n                  stroke=\"#82ca9d\"\n                  strokeWidth={2}\n                  name=\"bookings\"\n                />\n                <Line\n                  yAxisId=\"left\"\n                  type=\"monotone\"\n                  dataKey=\"mrr\"\n                  stroke=\"#ffc658\"\n                  strokeWidth={2}\n                  name=\"mrr\"\n                />\n              </LineChart>\n            </ResponsiveContainer>\n          </CardContent>\n        </Card>\n\n        {/* Destination Performance */}\n        <Card>\n          <CardHeader>\n            <CardTitle>Revenue by Destination</CardTitle>\n            <CardDescription>Top performing locations</CardDescription>\n          </CardHeader>\n          <CardContent>\n            <ResponsiveContainer width=\"100%\" height={300}>\n              <PieChart>\n                <Pie\n                  data={destinationRevenueData}\n                  cx=\"50%\"\n                  cy=\"50%\"\n                  labelLine={false}\n                  outerRadius={100}\n                  fill=\"#8884d8\"\n                  dataKey=\"value\"\n                  label={({ name, percent }) =>\n                    `${name} ${(percent * 100).toFixed(0)}%`\n                  }\n                >\n                  {destinationRevenueData.map((entry, index) => (\n                    <Cell key={`cell-${index}`} fill={entry.color} />\n                  ))}\n                </Pie>\n                <Tooltip\n                  formatter={(value) => [\n                    `₹${value.toLocaleString()}`,\n                    \"Revenue\",\n                  ]}\n                />\n              </PieChart>\n            </ResponsiveContainer>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Additional Analytics */}\n      <div className=\"grid gap-6 md:grid-cols-2\">\n        {/* NPS Breakdown */}\n        <Card>\n          <CardHeader>\n            <CardTitle>Net Promoter Score (NPS)</CardTitle>\n            <CardDescription>Customer satisfaction breakdown</CardDescription>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-4\">\n              <div className=\"text-center\">\n                <div className=\"text-4xl font-bold text-green-600 mb-2\">\n                  {npsScore}\n                </div>\n                <p className=\"text-sm text-gray-600\">Excellent Score</p>\n              </div>\n              {npsData.map((item, index) => (\n                <div key={index} className=\"flex items-center justify-between\">\n                  <span className=\"text-sm font-medium\">{item.category}</span>\n                  <div className=\"flex items-center space-x-2\">\n                    <div className=\"w-24 bg-gray-200 rounded-full h-2\">\n                      <div\n                        className=\"bg-blue-600 h-2 rounded-full\"\n                        style={{ width: `${item.percentage}%` }}\n                      ></div>\n                    </div>\n                    <span className=\"text-sm text-gray-600 w-12\">\n                      {item.count}\n                    </span>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Recent Activities */}\n        <Card>\n          <CardHeader>\n            <CardTitle>Recent Platform Activity</CardTitle>\n            <CardDescription>\n              Live updates from across the platform\n            </CardDescription>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-4\">\n              {recentActivities.map((activity, index) => (\n                <div key={index} className=\"flex items-start space-x-3\">\n                  <div\n                    className={`w-2 h-2 rounded-full mt-2 ${\n                      activity.status === \"success\"\n                        ? \"bg-green-500\"\n                        : activity.status === \"warning\"\n                          ? \"bg-yellow-500\"\n                          : activity.status === \"pending\"\n                            ? \"bg-blue-500\"\n                            : \"bg-gray-500\"\n                    }`}\n                  ></div>\n                  <div className=\"flex-1 min-w-0\">\n                    <p className=\"text-sm text-gray-900\">{activity.message}</p>\n                    <p className=\"text-xs text-gray-500\">{activity.time}</p>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Quick Actions */}\n      <Card>\n        <CardHeader>\n          <CardTitle>Quick Actions</CardTitle>\n          <CardDescription>Common administrative tasks</CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n            <Button variant=\"outline\" className=\"h-20 flex flex-col\">\n              <UserCheck className=\"h-6 w-6 mb-2\" />\n              <span className=\"text-sm\">Approve DMCs</span>\n            </Button>\n            <Button variant=\"outline\" className=\"h-20 flex flex-col\">\n              <Package className=\"h-6 w-6 mb-2\" />\n              <span className=\"text-sm\">Review Packages</span>\n            </Button>\n            <Button variant=\"outline\" className=\"h-20 flex flex-col\">\n              <IndianRupee className=\"h-6 w-6 mb-2\" />\n              <span className=\"text-sm\">Process Payouts</span>\n            </Button>\n            <Button variant=\"outline\" className=\"h-20 flex flex-col\">\n              <Users className=\"h-6 w-6 mb-2\" />\n              <span className=\"text-sm\">Manage Users</span>\n            </Button>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}